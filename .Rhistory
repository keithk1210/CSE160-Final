#clean the data by removing empty values
missions_df <- na.omit(missions_df)
fix_str <- function(x) {
return (gsub("/",".OR.",gsub(" ",".",toupper(x))));
}
#get all unique rescue types
tmp_types <- unique(missions_df$TECHNIQUE)
tmp_types <- strsplit(tmp_types, split = "; ")
tmp_types <- na.omit(tmp_types)
rescue_types <- c()
for(i in 1:length(tmp_types)) {
for(j in 1:length(tmp_types[[i]])) {
rescue_types <- append(rescue_types, tmp_types[[i]][j])
}
}
rescue_types <- na.omit(rescue_types)
rescue_types <- unique(rescue_types)
rescue_types <- fix_str(rescue_types)
#create new columns in missions_df
for(i in 1:length(rescue_types)) {
missions_df[,rescue_types[i]] <- 0L
}
#going through all fields, assign T/F to new col based on $TECHNIQUE
for(i in 1:length(missions_df$TECHNIQUE)) {
types <- strsplit(missions_df$TECHNIQUE[i], split = "; ")
for(j in 1:length(types)) {
missions_df[i,fix_str(types[[j]])] <- 1L
}
}
#remove old col
missions_df$TECHNIQUE <- NULL
activities <- unique(missions_df$ACTIVITY)
print(activities)
situations <- unique(missions_df$SITUATION)
print(situations)
library(e1071)
#factorization
missions_df$INCIDENT.REGION <- as.factor(missions_df$INCIDENT.REGION)
missions_df$ACTIVITY <- as.factor(missions_df$ACTIVITY)
missions_df$SITUATION <- as.factor(missions_df$SITUATION)
missions_df$SUBJECT.GENDER <- as.factor(missions_df$SUBJECT.GENDER)
#missions_df$Carry_out_by_foot <- as.factor(missions_df$Carry_out_by_foot)
missions_df
#YOUR CODE GOES HERE
#rescue_types
for(type in rescue_types) {
type_new <- gsub(" ","",type)
form <- gsub(" ","",paste(type_new," ~ ACTIVITY + SITUATION + LOCATION.FOUND.LATITUDE + LOCATION.FOUND.LONGITUDE + LOCATION.FOUND.ELEVATION"));
#print(form)
colname <- gsub(" ","",paste("missions_df$",type))
#print(paste("COLNAME:",colname, " FORM:",form))
dfs <- list()
combined_df <- data.frame()
for (activity in activities) {
true_condition <- eval(parse(text = paste(colname," == 1 & ACTIVITY == ",activity)))
false_condition <- eval(parse(text = paste(colname," == 0 & ACTIVITY == ",activity)))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (situation in situations) {
true_condition <- eval(parse(text = paste(colname," == 1 & SITUATION == ",situation)))
false_condition <- eval(parse(text = paste(colname," == 0 & SITUATION == ",situation)))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (df in dfs) {
combined_df <- rbind(combined_df,df)
}
model <- glm(formula = form,data=combined_df,family=binomial)
#print(paste("# of ",type,": ",sum(missions_df[,type])))
svm_pred_results <- predict(model,newdata = missions_df)
if (type == "Assist_or_own_power") {
#print(svm_pred_results)
}
svm_pred_results_thresh <- ifelse(svm_pred_results > .5,1,0)
svm_tab <- table(missions_df[,type],svm_pred_results_thresh)
accuracy <- format(sum(diag(svm_tab))/sum(svm_tab) * 100, digits = 3)
cat(sprintf("%-25s\t", type),paste(accuracy,"%"),"\n")
#print(svm_tab)
}
library(e1071)
#factorization
missions_df$INCIDENT.REGION <- as.factor(missions_df$INCIDENT.REGION)
missions_df$ACTIVITY <- as.factor(missions_df$ACTIVITY)
missions_df$SITUATION <- as.factor(missions_df$SITUATION)
missions_df$SUBJECT.GENDER <- as.factor(missions_df$SUBJECT.GENDER)
#missions_df$Carry_out_by_foot <- as.factor(missions_df$Carry_out_by_foot)
missions_df
#YOUR CODE GOES HERE
#rescue_types
for(type in rescue_types) {
type_new <- gsub(" ","",type)
form <- gsub(" ","",paste(type_new," ~ ACTIVITY + SITUATION + LOCATION.FOUND.LATITUDE + LOCATION.FOUND.LONGITUDE + LOCATION.FOUND.ELEVATION"));
#print(form)
colname <- gsub(" ","",paste("missions_df$",type))
#print(paste("COLNAME:",colname, " FORM:",form))
dfs <- list()
combined_df <- data.frame()
for (activity in activities) {
true_condition <- eval(parse(text = paste(colname," == 1 & missions_df$ACTIVITY == ",activity)))
false_condition <- eval(parse(text = paste(colname," == 0 & missions_df$ACTIVITY == ",activity)))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (situation in situations) {
true_condition <- eval(parse(text = paste(colname," == 1 & missions_df$SITUATION == ",situation)))
false_condition <- eval(parse(text = paste(colname," == 0 & missions_df$SITUATION == ",situation)))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (df in dfs) {
combined_df <- rbind(combined_df,df)
}
model <- glm(formula = form,data=combined_df,family=binomial)
#print(paste("# of ",type,": ",sum(missions_df[,type])))
svm_pred_results <- predict(model,newdata = missions_df)
if (type == "Assist_or_own_power") {
#print(svm_pred_results)
}
svm_pred_results_thresh <- ifelse(svm_pred_results > .5,1,0)
svm_tab <- table(missions_df[,type],svm_pred_results_thresh)
accuracy <- format(sum(diag(svm_tab))/sum(svm_tab) * 100, digits = 3)
cat(sprintf("%-25s\t", type),paste(accuracy,"%"),"\n")
#print(svm_tab)
}
library(e1071)
#factorization
missions_df$INCIDENT.REGION <- as.factor(missions_df$INCIDENT.REGION)
missions_df$ACTIVITY <- as.factor(missions_df$ACTIVITY)
missions_df$SITUATION <- as.factor(missions_df$SITUATION)
missions_df$SUBJECT.GENDER <- as.factor(missions_df$SUBJECT.GENDER)
#missions_df$Carry_out_by_foot <- as.factor(missions_df$Carry_out_by_foot)
missions_df
#YOUR CODE GOES HERE
#rescue_types
for(type in rescue_types) {
type_new <- gsub(" ","",type)
form <- gsub(" ","",paste(type_new," ~ ACTIVITY + SITUATION + LOCATION.FOUND.LATITUDE + LOCATION.FOUND.LONGITUDE + LOCATION.FOUND.ELEVATION"));
#print(form)
colname <- gsub(" ","",paste("missions_df$",type))
#print(paste("COLNAME:",colname, " FORM:",form))
dfs <- list()
combined_df <- data.frame()
for (activity in activities) {
true_condition <- eval(parse(text = paste(colname," == 1 && missions_df$ACTIVITY == ",activity)))
false_condition <- eval(parse(text = paste(colname," == 0 && missions_df$ACTIVITY == ",activity)))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (situation in situations) {
true_condition <- eval(parse(text = paste(colname," == 1 && missions_df$SITUATION == ",situation)))
false_condition <- eval(parse(text = paste(colname," == 0 && missions_df$SITUATION == ",situation)))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (df in dfs) {
combined_df <- rbind(combined_df,df)
}
model <- glm(formula = form,data=combined_df,family=binomial)
#print(paste("# of ",type,": ",sum(missions_df[,type])))
svm_pred_results <- predict(model,newdata = missions_df)
if (type == "Assist_or_own_power") {
#print(svm_pred_results)
}
svm_pred_results_thresh <- ifelse(svm_pred_results > .5,1,0)
svm_tab <- table(missions_df[,type],svm_pred_results_thresh)
accuracy <- format(sum(diag(svm_tab))/sum(svm_tab) * 100, digits = 3)
cat(sprintf("%-25s\t", type),paste(accuracy,"%"),"\n")
#print(svm_tab)
}
library(e1071)
#factorization
missions_df$INCIDENT.REGION <- as.factor(missions_df$INCIDENT.REGION)
missions_df$ACTIVITY <- as.factor(missions_df$ACTIVITY)
missions_df$SITUATION <- as.factor(missions_df$SITUATION)
missions_df$SUBJECT.GENDER <- as.factor(missions_df$SUBJECT.GENDER)
#missions_df$Carry_out_by_foot <- as.factor(missions_df$Carry_out_by_foot)
missions_df
#YOUR CODE GOES HERE
#rescue_types
for(type in rescue_types) {
type_new <- gsub(" ","",type)
form <- gsub(" ","",paste(type_new," ~ ACTIVITY + SITUATION + LOCATION.FOUND.LATITUDE + LOCATION.FOUND.LONGITUDE + LOCATION.FOUND.ELEVATION"));
#print(form)
colname <- gsub(" ","",paste("missions_df$",type))
#print(paste("COLNAME:",colname, " FORM:",form))
dfs <- list()
combined_df <- data.frame()
for (activity in activities) {
true_condition <- eval(parse(text = paste(colname," == 1 & missions_df$ACTIVITY == ",activity)))
false_condition <- eval(parse(text = paste(colname," == 0 & missions_df$ACTIVITY == ",activity)))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (situation in situations) {
true_condition <- eval(parse(text = paste(colname," == 1 & missions_df$SITUATION == ",situation)))
false_condition <- eval(parse(text = paste(colname," == 0 & missions_df$SITUATION == ",situation)))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (df in dfs) {
combined_df <- rbind(combined_df,df)
}
model <- glm(formula = form,data=combined_df,family=binomial)
#print(paste("# of ",type,": ",sum(missions_df[,type])))
svm_pred_results <- predict(model,newdata = missions_df)
if (type == "Assist_or_own_power") {
#print(svm_pred_results)
}
svm_pred_results_thresh <- ifelse(svm_pred_results > .5,1,0)
svm_tab <- table(missions_df[,type],svm_pred_results_thresh)
accuracy <- format(sum(diag(svm_tab))/sum(svm_tab) * 100, digits = 3)
cat(sprintf("%-25s\t", type),paste(accuracy,"%"),"\n")
#print(svm_tab)
}
library(e1071)
#factorization
missions_df$INCIDENT.REGION <- as.factor(missions_df$INCIDENT.REGION)
missions_df$ACTIVITY <- as.factor(missions_df$ACTIVITY)
missions_df$SITUATION <- as.factor(missions_df$SITUATION)
missions_df$SUBJECT.GENDER <- as.factor(missions_df$SUBJECT.GENDER)
#missions_df$Carry_out_by_foot <- as.factor(missions_df$Carry_out_by_foot)
missions_df
#YOUR CODE GOES HERE
#rescue_types
for(type in rescue_types) {
type_new <- gsub(" ","",type)
form <- gsub(" ","",paste(type_new," ~ ACTIVITY + SITUATION + LOCATION.FOUND.LATITUDE + LOCATION.FOUND.LONGITUDE + LOCATION.FOUND.ELEVATION"));
#print(form)
colname <- gsub(" ","",paste("missions_df$",type))
#print(paste("COLNAME:",colname, " FORM:",form))
dfs <- list()
combined_df <- data.frame()
for (activity in activities) {
true_condition <- eval(parse(text = paste(colname," == 1 & missions_df$ACTIVITY == '",activity,"'")))
false_condition <- eval(parse(text = paste(colname," == 0 & missions_df$ACTIVITY == '",activity)))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (situation in situations) {
true_condition <- eval(parse(text = paste(colname," == 1 & missions_df$SITUATION == ",situation)))
false_condition <- eval(parse(text = paste(colname," == 0 & missions_df$SITUATION == ",situation)))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (df in dfs) {
combined_df <- rbind(combined_df,df)
}
model <- glm(formula = form,data=combined_df,family=binomial)
#print(paste("# of ",type,": ",sum(missions_df[,type])))
svm_pred_results <- predict(model,newdata = missions_df)
if (type == "Assist_or_own_power") {
#print(svm_pred_results)
}
svm_pred_results_thresh <- ifelse(svm_pred_results > .5,1,0)
svm_tab <- table(missions_df[,type],svm_pred_results_thresh)
accuracy <- format(sum(diag(svm_tab))/sum(svm_tab) * 100, digits = 3)
cat(sprintf("%-25s\t", type),paste(accuracy,"%"),"\n")
#print(svm_tab)
}
library(e1071)
#factorization
missions_df$INCIDENT.REGION <- as.factor(missions_df$INCIDENT.REGION)
missions_df$ACTIVITY <- as.factor(missions_df$ACTIVITY)
missions_df$SITUATION <- as.factor(missions_df$SITUATION)
missions_df$SUBJECT.GENDER <- as.factor(missions_df$SUBJECT.GENDER)
#missions_df$Carry_out_by_foot <- as.factor(missions_df$Carry_out_by_foot)
missions_df
#YOUR CODE GOES HERE
#rescue_types
for(type in rescue_types) {
type_new <- gsub(" ","",type)
form <- gsub(" ","",paste(type_new," ~ ACTIVITY + SITUATION + LOCATION.FOUND.LATITUDE + LOCATION.FOUND.LONGITUDE + LOCATION.FOUND.ELEVATION"));
#print(form)
colname <- gsub(" ","",paste("missions_df$",type))
#print(paste("COLNAME:",colname, " FORM:",form))
dfs <- list()
combined_df <- data.frame()
for (activity in activities) {
true_condition <- eval(parse(text = paste(colname," == 1 & missions_df$ACTIVITY == '",activity,"'")))
false_condition <- eval(parse(text = paste(colname," == 0 & missions_df$ACTIVITY == '",activity,"'")))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (situation in situations) {
true_condition <- eval(parse(text = paste(colname," == 1 & missions_df$SITUATION == '",situation,"'")))
false_condition <- eval(parse(text = paste(colname," == 0 & missions_df$SITUATION == '",situation,"'")))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (df in dfs) {
combined_df <- rbind(combined_df,df)
}
model <- glm(formula = form,data=combined_df,family=binomial)
#print(paste("# of ",type,": ",sum(missions_df[,type])))
svm_pred_results <- predict(model,newdata = missions_df)
if (type == "Assist_or_own_power") {
#print(svm_pred_results)
}
svm_pred_results_thresh <- ifelse(svm_pred_results > .5,1,0)
svm_tab <- table(missions_df[,type],svm_pred_results_thresh)
accuracy <- format(sum(diag(svm_tab))/sum(svm_tab) * 100, digits = 3)
cat(sprintf("%-25s\t", type),paste(accuracy,"%"),"\n")
#print(svm_tab)
}
missions_df <- read.csv(file = "./Wildland_Search_and_Rescue_Missions_by_NYS_Forest_Rangers__Beginning_2012.csv", header=TRUE)
#clean the data by removing empty values
missions_df <- na.omit(missions_df)
fix_str <- function(x) {
return (gsub("/",".OR.",gsub(" ",".",toupper(x))));
}
#get all unique rescue types
tmp_types <- unique(missions_df$TECHNIQUE)
tmp_types <- strsplit(tmp_types, split = "; ")
tmp_types <- na.omit(tmp_types)
rescue_types <- c()
for(i in 1:length(tmp_types)) {
for(j in 1:length(tmp_types[[i]])) {
rescue_types <- append(rescue_types, tmp_types[[i]][j])
}
}
rescue_types <- na.omit(rescue_types)
rescue_types <- unique(rescue_types)
rescue_types <- fix_str(rescue_types)
#create new columns in missions_df
for(i in 1:length(rescue_types)) {
missions_df[,rescue_types[i]] <- 0L
}
#going through all fields, assign T/F to new col based on $TECHNIQUE
for(i in 1:length(missions_df$TECHNIQUE)) {
types <- strsplit(missions_df$TECHNIQUE[i], split = "; ")
for(j in 1:length(types)) {
missions_df[i,fix_str(types[[j]])] <- 1L
}
}
#remove old col
missions_df$TECHNIQUE <- NULL
activities <- unique(missions_df$ACTIVITY)
print(activities)
situations <- unique(missions_df$SITUATION)
print(situations)
library(e1071)
#factorization
missions_df$INCIDENT.REGION <- as.factor(missions_df$INCIDENT.REGION)
missions_df$ACTIVITY <- as.factor(missions_df$ACTIVITY)
missions_df$SITUATION <- as.factor(missions_df$SITUATION)
missions_df$SUBJECT.GENDER <- as.factor(missions_df$SUBJECT.GENDER)
#missions_df$Carry_out_by_foot <- as.factor(missions_df$Carry_out_by_foot)
#missions_df
#YOUR CODE GOES HERE
#rescue_types
for(type in rescue_types) {
type_new <- gsub(" ","",type)
form <- gsub(" ","",paste(type_new," ~ ACTIVITY + SITUATION + LOCATION.FOUND.LATITUDE + LOCATION.FOUND.LONGITUDE + LOCATION.FOUND.ELEVATION"));
#print(form)
colname <- gsub(" ","",paste("missions_df$",type))
#print(paste("COLNAME:",colname, " FORM:",form))
dfs <- list()
combined_df <- missions_df[0,]
for (activity in activities) {
true_condition <- eval(parse(text = paste(colname," == 1 & missions_df$ACTIVITY == '",activity,"'")))
false_condition <- eval(parse(text = paste(colname," == 0 & missions_df$ACTIVITY == '",activity,"'")))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (situation in situations) {
true_condition <- eval(parse(text = paste(colname," == 1 & missions_df$SITUATION == '",situation,"'")))
false_condition <- eval(parse(text = paste(colname," == 0 & missions_df$SITUATION == '",situation,"'")))
#print(paste(colname," == ","1"))
#print(paste(colname," == ","0"))
true_df <- missions_df[true_condition,]
false_df <- missions_df[false_condition,]
n_true <- nrow(true_df)
if (n_true > nrow(false_df)) {
n_true = nrow(false_df)
}
new_df <- rbind(true_df,false_df[sample(nrow(false_df),n_true),])
dfs <- c(new_df,dfs)
}
for (df in dfs) {
combined_df <- rbind(df,combined_df)
}
combined_df
#model <- glm(formula = form,data=combined_df,family=binomial)
#svm_pred_results <- predict(model,newdata = missions_df)
#svm_pred_results_thresh <- ifelse(svm_pred_results > .5,1,0)
#svm_tab <- table(missions_df[,type],svm_pred_results_thresh)
#accuracy <- format(sum(diag(svm_tab))/sum(svm_tab) * 100, digits = 3)
#cat(sprintf("%-25s\t", type),paste(accuracy,"%"),"\n")
}
#model <- glm(formula = Technical_Rope ~ LOCATION.FOUND.LATITUDE + LOCATION.FOUND.LONGITUDE + LOCATION.FOUND.ELEVATION,data=missions_df,family=binomial)
#svm_pred_results <- predict(model,newdata = missions_df)
#svm_pred_results_thresh <- ifelse(svm_pred_results > .5,1,FALSE)
#svm_tab <- table(missions_df$Technical_Rope,svm_pred_results_thresh)
#svmfit = svm(Technica ~ INCIDENT.REGION,data=missions_df,kernel="linear",type="C-classification")
#model <- glm(formula = Carry_out_by_foot ~ INCIDENT.REGION,data=missions_df,family=binomial)
#classifier <- naiveBayes(train[,2:10], train[,11])
#prediction <- predict(classifier, newdata = test)
#print(prediction)
#tab <- table(test$V11,prediction)
print("amongus")
#eval(parse(text = paste("missions_df$SITUATION == '",situation,"'")))
#string <- cat('missions_df$SITUATION == ','\"',situation,'\"')
#missions_df[eval(parse(text = string)),]
print("amongus")
eval(parse(text = paste("missions_df$SITUATION == '",situation,"'")))
string <- cat('missions_df$SITUATION == ','\"',situation,'\"')
missions_df[eval(parse(text = string)),]
